datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model User {
  id                      String     @id @default(cuid())
  createdAt               DateTime   @default(now())
  updatedAt               DateTime   @updatedAt
  email                   String?    @unique
  password                String
  name                    String?
  father_or_husband_name  String?
  mobile_number           String?
  alternate_mobile_number String?
  documents               Document[]
  nominee                 Nominee?
  kyc                     KYC        @default(NOT_INITIALIZED)
  role                    Role
  membership              Membership @default(BASIC)
  subKyc                  SubKyc[]
  date_of_birth           String?
  demat_account           String?
  private_key             String?    @unique
  pw_id                   String?    @unique
  rm_id                   String?    @unique
}

model Document {
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt()
  id        String   @id @default(cuid())
  title     String
  url       String
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  status    STATUS   @default(PENDING)
}

model SubKyc {
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt()
  id          String   @id @default(cuid())
  fieldName   String
  fieldStatus KYC      @default(NOT_INITIALIZED)
  user        User?    @relation(fields: [userId], references: [id])
  userId      String?
}

model Nominee {
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User?    @relation(fields: [userId], references: [id])
  userId       String   @unique
  name         String?
  relationship String
  id           String   @id @default(cuid())
}

model KycHandler {
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  userId           String
  handlerId        String
  identifier       String
  updatedKycStatus String
  id               String   @id @default(cuid())
}

enum Role {
  ADMIN
  USER
}

enum Membership {
  BASIC
  ADVANCE
}

enum KYC {
  NOT_INITIALIZED
  SUBMITTED
  ONGOING
  REJECTED
  APPROVED
}

enum STATUS {
  NOT_INITILAIZED
  PENDING
  APPROVED
  REJECTED
}
