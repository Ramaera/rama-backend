# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
  user: User!
}

input ChangePasswordInput {
  newPassword: String!
  private_key: String!
}

input ChangePasswordWithPrivateKeyInput {
  newPassword: String!
  private_key: String!
}

input CreateDocumentInput {
  title: String!
  url: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Document {
  title: String!
  url: String!
}

type DocumentModal {
  createdAt: DateTime!
  id: String!
  title: String
  updatedAt: DateTime!
  url: String
}

type EmptyModal {
  message: String
}

"""
A field whose value is a JSON Web Token (JWT): https://jwt.io/introduction.
"""
scalar JWT

"""User KYC Status"""
enum KYC {
  APPROVED
  NOT_INITIALIZED
  ONGOING
  REJECTED
  SUBMITTED
}

input LoginInput {
  password: String!
  pw_id: String!
}

enum Membership {
  ADVANCE
  BASIC
}

type Mutation {
  changePassword(data: ChangePasswordInput!): User!
  createDocument(data: CreateDocumentInput!): Document!
  forgetPasswordWithPrivateKey(data: ChangePasswordWithPrivateKeyInput!): EmptyModal!
  login(data: LoginInput!): Auth!
  passwordresetRequest(data: PasswordRequestInput!): Auth!
  refreshToken(token: JWT!): Token!
  signup(data: SignupInput!): Auth!
  updateDocument(data: UpdateDocumentsInput!): Document!
  updateUser(data: UpdateUserInput!): User!
  upsertNominee(data: NomineeInput!): Nominee!
}

type Nominee {
  name: String!
  relationship: String!
}

input NomineeInput {
  name: String
  relationship: String
}

type NomineeModel {
  createdAt: DateTime!
  id: String!
  name: String!
  relationship: String!
  updatedAt: DateTime!
}

input PasswordRequestInput {
  pw_id: String!
}

type Query {
  hello(name: String!): String!
  helloWorld: String!
  me: User!
  myDocuments(userId: String!): [Document!]!
  myNominee(userId: String!): [Nominee!]!
}

"""User role"""
enum Role {
  ADMIN
  USER
}

input SignupInput {
  email: String
  membership: Membership
  mobile: String
  name: String
  password: String!
  pw_id: String!
}

type Token {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
}

input UpdateDocumentsInput {
  id: String!
  title: String
  url: String
}

input UpdateUserInput {
  alternate_mobile_number: String
  date_of_birth: String
  demat_account: String
  email: String
  father_or_husband_name: String
  mobile_number: String
  name: String
}

type User {
  alternate_mobile_number: String
  createdAt: DateTime!
  date_of_birth: String
  demat_account: String
  documents: [DocumentModal!]
  email: String
  father_or_husband_name: String
  id: String!
  kyc: KYC!
  mobile_number: String
  name: String
  nominee: NomineeModel
  private_key: String
  pw_id: String
  rm_id: String
  role: Role!
  updatedAt: DateTime!
}
